{"version":3,"sources":["App.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","reportWebVitals.js","index.js"],"names":["myWHp1","myWHp2","myWHtime","myWHgen","myWHsex","myWHid","myWHbreed","account","owlWallet","img","initialState","loading","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","myWHimg","Array","loadMyOwl","contract","PLAYERITEMS","then","d","i","length","$","append","moment","unix","fromNow","duration","diff","asSeconds","getJSON","Web3","ethereum","setProvider","eth","request","method","net","getId","params","chainId","location","reload","Contract","abi","gen","count","contract2","abi2","balanceOf","getBalance","hide","load","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","StyledLogo","alt","src","ResponsiveWrapper","StyledImg","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","StyledLink","target","href","substring","Number","StyledButton","onClick","e","preventDefault","abiResponse","window","isMetaMask","Web3EthContract","accounts","SmartContractObj","on","StyledRoundButton","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","receipt","claimNFTs","transform","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2ff23d9.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\n\nvar myWHp1,\n  myWHp2,\n  myWHtime,\n  myWHgen,\n  myWHsex,\n  myWHid,\n  myWHbreed,\n  myWHimg = new Array(),\n  breed1,\n  breed2,\n  gen,\n  sex,\n  cid,\n  count,\n  account,\n  loaded = false,\n  owlWallet,\n  img;\n\nasync function loadMyOwl() {\n  await contract.methods\n    .PLAYERITEMS(account)\n    .call()\n    .then((d) => {\n      myWHp1 = d[0];\n      myWHp2 = d[1];\n      myWHtime = d[2];\n      myWHgen = d[3];\n      myWHsex = d[4];\n      myWHid = d[5];\n      myWHbreed = d[6];\n    });\n  for (let i = 0; i < myWHid.length; i++) {\n    myWHimg[i] = img[myWHgen[i]][myWHsex[i]];\n    $('#myWH').append(\n      `<p id=\"o${myWHid[i]}\" class=\"boxnft\"><b>Whooli Hootie #${\n        myWHid[i]\n      }</b><br/>Parents : ${myWHp1[i]} + ${myWHp2[i]}<br/>Last breeded: ${\n        myWHtime[i] > 0\n          ? moment(moment.unix(myWHtime[i])).fromNow()\n          : 'Since forever'\n      }<br/>Generation: ${myWHgen[i]} (${\n        myWHsex[i] == 0 ? 'Female' : 'Male'\n      })<br/><video autoplay loop muted src=\"https://ipfs.io/ipfs/${\n        myWHimg[i]\n      }${\n        moment\n          .duration(moment().diff(moment(moment.unix(myWHtime[i]))))\n          .asSeconds() > /*60480*/ 0 && myWHbreed[i] == 1\n          ? `\" onclick=\"loadImg(${i})\" class=\"nft`\n          : `\" class=\"nobreed`\n      }\"></video></p> `\n    );\n  }\n}\nasync function loadImg(p1) {\n  //add for breeding, hide the rest of it\n  const s1 = `<video autoplay loop muted onclick=\"unloadImg()\" src=\"https://ipfs.io/ipfs/${myWHimg[p1]}\" class=\"nft\"></video>`;\n  if ($('#breed1').is(':empty')) {\n    $('#breed1').html(s1);\n    breed1 = myWHid[p1];\n    hideOwls(p1);\n  } else if ($('#breed2').is(':empty')) {\n    $('#breed2').html(s1);\n    breed2 = myWHid[p1];\n    hideOwls(p1);\n  } else return;\n  if (!$('#breed1').is(':empty') && !$('#breed2').is(':empty')) {\n    $('#breed').show();\n    await contract.methods\n      .gen(parseInt(myWHgen[p1]) + 1)\n      .call()\n      .then((d) => {\n        $('#lblBreed').html(`(${d[1]}/${d[0]})`);\n      });\n    gen = parseInt(myWHgen[p1]) + 1;\n  }\n}\nasync function hideOwls(p1) {\n  //breeding hide function\n  for (let i = 0; i < myWHid.length; i++) {\n    if (myWHsex[i] == myWHsex[p1] || myWHgen[i] != myWHgen[p1])\n      $('#o' + myWHid[i]).hide();\n    if (myWHp1[i] == myWHid[p1]) $(`#o${myWHp2[i]}`).hide();\n    if (myWHp2[i] == myWHid[p1]) $(`#o${myWHp1[i]}`).hide();\n  }\n}\nasync function unloadImg() {\n  //reset to select others for breeding\n  $('#breed1').empty();\n  $('#breed2').empty();\n  $('#lblBreed').empty();\n  breed1 = null;\n  breed2 = null;\n  $('#breed').hide();\n  for (let i = 0; i < myWHid.length; i++) $('#o' + myWHid[i]).show();\n}\nasync function getCID() {\n  const ipfs = IpfsApi({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n  });\n  sex = Math.floor(Math.random() * 2);\n  const pro = await new Promise((d) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      ipfs.add(ipfs.Buffer.from(reader.result)).then((files) => {\n        d(files);\n      });\n    };\n    reader.readAsArrayBuffer(\n      new File(\n        [\n          JSON.stringify({\n            name: `Whooli Hootie #${parseInt(count) + 1}`,\n            description:\n              'We are a green chip NFT that gives passive income and many offline perks. Find another gender to breed your baby owl now!',\n            animation_url: `ipfs://${img[gen][sex]}`,\n            attributes: [\n              { display_type: 'number', trait_type: 'Generation', value: gen },\n              { trait_type: 'Gender', value: sex == 0 ? 'Female' : 'Male' },\n              {\n                trait_type: 'Parent 1',\n                value: breed1 == null ? '' : `WHCC #${breed1}`,\n              },\n              {\n                trait_type: 'Parent 2',\n                value: breed2 == null ? '' : `WHCC #${breed2}`,\n              },\n              {\n                display_type: 'date',\n                trait_type: 'Hatched on',\n                value: Date.now(),\n              },\n            ],\n          }),\n        ],\n        'application/json'\n      )\n    );\n  });\n  cid = pro[0].hash;\n}\nasync function MINT() {\n  gen = 1;\n  await getCID();\n  await contract.methods.MINT(sex, cid).send({\n    from: account,\n    value: 0, //0.88e18, DEPLOYMENT\n  });\n  location.reload();\n}\nasync function BREED() {\n  if (owlWallet < 30) {\n    $('#breed').html(`Insufficient OWL Token`);\n    return;\n  }\n  await getCID();\n  await contract.methods.BREED(breed1, breed2, sex, cid).send({\n    from: await account,\n  });\n  location.reload();\n}\nasync function load() {\n  await $.getJSON(\n    'https://aloycwl.github.io/omg_frontend/whcc/js/img.min.json',\n    function (d) {\n      img = d;\n    }\n  );\n  /*if (ethereum)*/ web3 = new Web3(ethereum);\n  web3.setProvider(ethereum);\n  web3.eth.setProvider(ethereum);\n  /*else {\n    web3 = new Web3(\n      'https://eth-rinkeby.alchemyapi.io/v2/xneL9EV87zUlVocEVcyDT5tqp4LZE0Fy'\n    );\n  }*/\n  await ethereum.request({ method: 'eth_requestAccounts' }).then((d) => {\n    account = d[0];\n  });\n  if ((await web3.eth.net.getId()) != 4) {\n    //DEPLOYMENT change this and the one below to 1 as mainnet\n    await ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: '0x4' }],\n    });\n    location.reload();\n  } else {\n    contract = new web3.eth.Contract(\n      abi,\n      '0xD120D29947BCb41812Dc6e7AbA2782E7c8237F36'\n    );\n    await contract.methods\n      .gen(1)\n      .call()\n      .then((d) => {\n        $('#mint').append(`${d[1]} / ${d[0]} )`);\n      });\n    count = await contract.methods.count.call().call();\n    // get token balance\n    contract2 = new web3.eth.Contract(\n      abi2,\n      '0x34A85f092877F93584ab9f4fe9aE2FFA8C846B1F'\n    );\n    owlWallet = (await contract2.methods.balanceOf(account).call()) / 1e18;\n    $('#name').append(\n      `${\n        (await contract.methods.getBalance.call().call()) / 1e18\n      } balance. Owl Wallet: ${owlWallet}`\n    );\n    $('#connect').hide();\n  }\n  loadMyOwl();\n}\n/*async function isWeb3() {\n  //to check if metamask is connected or disconnnected\n  await ethereum.request({ method: 'eth_requestAccounts' }).then((d) => {\n    if (d.length > 0) {\n      $('#connect').hide();\n      $('#root').show();\n      if (!loaded) {\n        loadMyOwl();\n        loaded = true;\n      }\n    } else {\n      $('#connect').show();\n      $('#root').hide();\n      $('#name').html(`<b>Whooli Hootie </b>`);\n      $('#mint').html('MINT (');\n    }\n  });\n}\nsetInterval(isWeb3, 1000);*/\nload();\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}